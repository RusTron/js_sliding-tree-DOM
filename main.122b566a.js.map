{"version":3,"sources":["scripts/main.js"],"names":["list","document","querySelectorAll","tree","querySelector","style","position","top","getBoundingClientRect","y","left","x","reg","item","test","outerHTML","inner","firstChild","textContent","insertAdjacentHTML","addEventListener","event","target","className","nextElementSibling","hidden","stopImmediatePropagation"],"mappings":";AAAA,aAuBA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EArBA,IAAMA,EAAOC,SAASC,iBAAiB,MAEjCC,EAAOF,SAASG,cAAc,SAEpCD,EAAKE,MAAMC,SAAW,WACtBH,EAAKE,MAAME,IAASJ,GAAAA,OAAAA,EAAKK,wBAAwBC,EAAjD,MACAN,EAAKE,MAAMK,KAAUP,GAAAA,OAAAA,EAAKK,wBAAwBG,EAAlD,MAEA,IAaA,EAbMC,EAAM,QAEOZ,EAAAA,EAAAA,GAWnB,IAXyB,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAda,IAAAA,EAAc,EAAA,MACnBD,GAAAA,EAAIE,KAAKD,EAAKE,WAAY,CACtBC,IAAAA,EAAQH,EAAKI,WAAWC,YAE9BL,EAAKI,WAAWC,YAAc,GAE9BL,EAAKM,mBAAmB,aACCH,uBAAAA,OAAAA,EADzB,cAKJ,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAAAb,EAAKiB,iBAAiB,QAAS,SAASC,GACP,UAA3BA,EAAMC,OAAOC,YAIjBF,EAAMC,OAAOE,mBAAmBC,QAC7BJ,EAAMC,OAAOE,mBAAmBC,OACnCJ,EAAMK","file":"main.122b566a.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst list = document.querySelectorAll('li');\n\nconst tree = document.querySelector('.tree');\n\ntree.style.position = 'absolute';\ntree.style.top = `${tree.getBoundingClientRect().y}px`;\ntree.style.left = `${tree.getBoundingClientRect().x}px`;\n\nconst reg = /(ul)/g;\n\nfor (const item of list) {\n  if (reg.test(item.outerHTML)) {\n    const inner = item.firstChild.textContent;\n\n    item.firstChild.textContent = '';\n\n    item.insertAdjacentHTML('afterbegin',\n      `<span class=\"title\">${inner}</span>`);\n  }\n}\n\ntree.addEventListener('click', function(event) {\n  if (event.target.className !== 'title') {\n    return;\n  }\n\n  event.target.nextElementSibling.hidden\n  = !event.target.nextElementSibling.hidden;\n  event.stopImmediatePropagation();\n});\n"]}